import { formatDistance } from "date-fns";
import type { NextPage } from "next";
import Head from "next/head";
import { config } from "../config";
import { Question } from "../interfaces";
import styles from "../styles/Home/styles.module.css";
import { withIronSessionSsr } from "iron-session/next";
import { ironConfig } from "./api/_utils/ironConfig";
import { useRouter } from "next/router";

interface HomeProps {
  user: any;
  questions: Question[];
}

export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const [user, questions] = await Promise.all([
      fetch(`${config.origin}/auth/me`, {
        headers: {
          authorization: `Bearer ${(req.session as any).access_token}`,
        },
      })
        .then((res) => res.json())
        .catch(() => null),
      fetch(`${config.origin}/question/top`, {
        headers: {
          authorization: `Bearer ${(req.session as any).access_token}`,
        },
      }).then((res) => res.json()),
    ]);

    return { props: { user, questions } };
  },
  ironConfig
);

const Home: NextPage<HomeProps> = ({ user, questions }: HomeProps) => {
  const router = useRouter();
  if (user && !user.name) {
    router.push("/profile");
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Doubtful.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Better questions ➡️ better forecasting</h1>
        <h2 className={styles.subTitle}>
          Help us craft better questions for the world’s forecasting platforms
        </h2>

        <section className={styles.questionsWrapper}>
          {questions.map((question) => {
            return (
              <a
                key={question.id}
                href={`/question/${question.slug}`}
                className={styles.question}
              >
                <h2 className={styles.questionTitle}>{question.title}</h2>
                <small className={styles.questionSubTitle}>
                  <img
                    src={question.owner.avatarUrl}
                    className={styles.questionOwnerImg}
                  />
                  {question.owner.name} · {question.activity.length} Comments ·{" "}
                  {formatDistance(new Date(question.createdAt), new Date(), {
                    addSuffix: true,
                  })}
                </small>
              </a>
            );
          })}
        </section>
      </main>
    </div>
  );
};

export default Home;
